name: Test and publish tag

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:

  publish:

    # This job should only run if the test job succeeds
    # Don't run this job if it's a pull request, otherwise we get an image with branch name "merge" for every PR
    #needs: test
    #if: success() && github.event_name != 'pull_request'
    # Check if github.ref is NOT a tag
    # UNCOMMENT THIS TO ENABLE!
    if: ${{ github.event_name != 'pull_request' && ! startsWith(github.ref, 'refs/tags/') }}
 
    runs-on: ubuntu-22.04

    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        lfs: true

  publish-tag:

    # This job should only run if the test job succeeds
    # Don't run this job if it's a pull request, otherwise we get an image with branch name "merge" for every PR
    #needs: test
    #if: success() && github.event_name != 'pull_request'
    # Check if github.ref is a tag
    # UNCOMMENT THIS TO ENABLE!
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
 
    runs-on: ubuntu-22.04

    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        lfs: true

    - name: Checkout LFS objects
      run: git lfs checkout

    - name: Build the Docker image for tag
      # The metadata inside the image will include the final git commit SHA and the time of the final commit.
      # The tag applied to the image will be like spyderisk/system-modeller:<branch-name>-<timestamp>
      # e.g. spyderisk/system-modeller:dev-20230405T1012
      # Where the timestamp is the time of the final commit in the build.
      # In addition, the image is tagged with spyderisk/system-modeller:<branch-name>-latest
      run: |
        echo "event_name = ${{github.event_name}}"
        echo "action = ${{github.event.action}}"
        echo "GITHUB_REF = ${GITHUB_REF}"
        TAG_ROOT=spyderisk/system-modeller
        REF_END=$(echo ${GITHUB_REF} | sed 's/.*\///')
        TAG=${TAG_ROOT}:${REF_END}
        echo "TAG=${TAG}" >> ${GITHUB_ENV}
        #UNCOMMENT TO BUILD IMAGE
        #docker build --tag ${TAG} --build-arg CI_COMMIT_SHA=${GITHUB_SHA} --build-arg CI_COMMIT_TIMESTAMP=${TIMESTAMP} --file Dockerfile --target ssm-production "."

    - name: Push Docker image to registry
      run: | 
        echo "docker login -u ${{ vars.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_RW_SECRET }}"
        echo "docker push ${TAG}"

